/* the first thing to do is to every single element on the page apply box-sizing
border box what this does is make sure that the border and the padding are
included in the total size of the div whenever I set height or width so
normally if I chose to set the height of a box to 400 but then I chose to give it
a three pixel border that would actually add to the total size of the box making
the Box 406 pixels in height instead what box sizing does is allow us
to make changes to padding and border without affecting the size of the total
div space that it's sticking up
*/

* {
  box-sizing: border-box;
}

body {
  font-family: Arial, "Helvetica Neue", Helvetica, sans-serif;
  font-size: 18px;
  line-height: 34px;
  color: #777;
  background: url("../images/concrete_seamless.png");
}

/* done next is say on all those
things that I declared containers around
I want you to make sure it takes up the
total width of the page up to 960 pixels
which is a pixel measurement I got off
of the assignment as well as setting the
margins to zero and auto centering
everything the clear:both has to do with
the fact that we will probably be
floating elements to arrange everything
the way we need to and we want to make
sure that any of the following
containers get that cleared from them if
we do a float on a previous element now
that we've done some general styling
let's get started on just our header
*/

.container {
  width: 100%;
  max-width: 960px;
  margin: 0 auto;
  clear: both;
}

h1, h2, h3, p {
  margin-bottom: 20px;
}

p:last-child {
  margin-bottom: 0;
}

h1, h2, h3 {
  font-family: Georgia, Times, "Times New Roman", serif;
  font-weight: 700;
  color: #4aaaa5;
}

h1 {
  padding-bottom: 20px;
  font-size: 30px;
  line-height: 49px;
  border-bottom: 3px solid #ddd;
}

h2, h3 {
  font-size: 22px;
}

/* header */

#masthead {
  position: fixed;
  z-index: 99;
  width: 100%;
  margin: 0 0 30px;
  overflow: auto;
  color: #fff;
  background: #fff;
  border-bottom: 2px solid #ccc;
}

#logo {
  float: left;
  width: 250px;
  height: 90px;
  font-family: Georgia, Times, "Times New Roman", serif;
  font-size: 30px;
  font-weight: 700;
  line-height: 90px;
  color: #fff;
  text-align: center;
  text-decoration: none;
  background: #4aaaa5;
}

nav {
  float: right;
  margin-top: 25px;
}

/* display:inline-block for instance
will change the display default property
that was making the stack on top of each
other in a block fashion it will change
them to inline block where they lay next
to each other if they have enough room I
also put a border on the left-hand side
to create these lines here and then I
specifically said that the a on the
navigation bar for the first child which
is just going to be the first a link
under your nav bar shouldn't have a
border that makes sure that we don't get
a line on the side of about 
*/

nav a {
  display: inline-block;
  padding-left: 15px;
  margin-left: 15px;
  line-height: 18px;
  color: #999;
  text-decoration: none;
  border-left: 1px solid #efefef;
}

nav a:first-child {
  border-left: 0 none;
}

/* footer */

footer {
  padding: 30px 0;
  clear: both;
  font-size: 12px;
  color: #fff;
  color: #ccc;
  text-align: center;
  background: #666;
  border-top: 8px solid #4aaaa5;
  height: 50px;
}

h3, h2 {
  padding-bottom: 20px;
  margin-bottom: 15px;
  line-height: 22px;
  border-bottom: 2px solid #eee;
}

/* main */

#main-container {
  padding-top: 130px;
  min-height: calc(100vh - 70px);
}

.main-section {
  float: left;
  width: 100%;
  max-width: 960px;
  padding: 30px;
  margin: 0 0 40px;
  background: #fff;
  border: 1px solid #ddd;
}

/* portfolio page */

.work {
  position: relative;
  float: left;
  width: 274px;
  margin: 20px 0 25px;
  overflow: auto;
}

.work:nth-child(even) {
  margin-right: 40px;
}

.work img {
  width: 100%;
  border: 0 none;
  opacity: 0.8;
}

/* we want to
override the stylings that we have set
it for our h3s
otherwise by attaching a class to the
element it is weighted more by the CSS
and will override the properties that
are normally set for that element all by
itself.
I was able to do this by overriding the
previous styles and setting the right
colors and font weights to match what we
wanted this to look like the next step I
took was to do absolute positioning on
these elements and to nudge them up 20
pixels by saying bottom 20 pixels 
*/

.work h3 {
  position: absolute;
  bottom: 20px;
  width: 100%;
  padding: 15px;
  margin-bottom: 0;
  font-weight: 300;
  line-height: 30px;
  color: #fff;
  text-align: center;
  background: #4aaaa5;
  border-bottom: 0;
}

/* we sized our first image called off
image class on the about me page that
class is also associated with all these
pictures too we notice they were around
the same size so we put them all into
the same class 
*/

.auth-image {
  float: left;
  width: 200px;
  height: auto;
  margin-top: 10px;
  margin-right: 25px;
}

/* contact page */

#contact-form ul {
  margin-bottom: 20px;
}

#contact-form li {
  margin-bottom: 10px;
}

label,
input[type=text],
input[type=email],
textarea {
  display: block;
  width: 100%;
}

input[type=text],
input[type=email],
textarea {
  height: 35px;
  padding: 0 10px;
  font-size: 14px;
  border: 1px solid #ddd;
}

textarea {
  height: 200px;
}

input[type=submit] {
  padding: 10px 30px;
  font-size: 18px;
  color: #fff;
  cursor: pointer;
  background: #4aaaa5;
  border: 0 none;
}

/* media queries */
@media screen and (max-width:980px) {
  .main-section {
    float: none;
    width: 60%;
  }
}

@media screen and (max-width:768px) {
  .main-section {
    float: none;
    width: 90%;
  }
  .auth-image {
     width: 300px;
     height: 300px;
  } 
}      
  @media screen and (max-width:640px) {
   .container #masthead, #logo,
   header nav,
   header nav a {
    float: none;
  
    overflow:hidden;
    text-align: center;
  
    width: 100%;

   }
    
    .main-section {
      float: none;
      width: 90%;
    }
    .auth-image {
       width: auto;
       height: auto;
    }

}
